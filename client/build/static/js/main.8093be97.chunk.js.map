{"version":3,"sources":["styles/pages/SplashPage.module.scss","components/StateContext.tsx","components/PrivateRoute.tsx","pages/Viewer.tsx","components/Configurator.tsx","pages/SplashPage.tsx","App.tsx","index.tsx","styles/pages/Viewer.module.scss","styles/components/Configurator.module.scss","serviceWorker.js"],"names":["module","exports","DEFAULT_STATE","isAuthorized","roomname","password","navigation","isLogin","video","subtitles","isConfigured","StateContext","createContext","StateProvider","children","useState","state","setState","Provider","value","PrivateRoute","exact","path","useContext","to","Viewer","player","useRef","track","useEffect","toggle","current","addEventListener","socket","emit","id","currentTime","on","data","pause","play","url","URL","createObjectURL","src","removeEventListener","className","styles","body","show","hidden","controls","ref","label","kind","Configurator","useDropzone","noClick","noKeyboard","maxFiles","onDropAccepted","files","onDrop","getRootProps","getInputProps","open","console","log","file","ext","name","slice","wrapper","banner","icon","text","highlight","filename","chooseFile","onClick","playEnabled","playDisabled","SplashPage","style","display","container","title","line","percent","strokeWidth","strokeColor","subtitle","renderStage","Select","option","Auth","room","setRoom","setPassword","username","auth","type","placeholder","onChange","e","target","alternative","App","result","removeAllListeners","io","secure","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","Object","defineProperty","unregister","register","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","reload","checkValidServiceWorker","message"],"mappings":"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","file":"static/js/main.8093be97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SplashPage_body__29rwu\",\"container\":\"SplashPage_container__hV7YC\",\"title\":\"SplashPage_title__C3RiL\",\"subtitle\":\"SplashPage_subtitle__3Gyzc\",\"option\":\"SplashPage_option__fjF7i\",\"auth\":\"SplashPage_auth__v5PyR\",\"label\":\"SplashPage_label__qVV4Y\",\"alternative\":\"SplashPage_alternative__2ds4A\"};","import React, { Dispatch, SetStateAction } from 'react';\r\nimport { useState, createContext } from 'react';\r\n\r\nexport interface State{\r\n  isAuthorized: boolean,\r\n  roomname: string | null,\r\n  password: string | null,\r\n  navigation: number,\r\n  isLogin: boolean,\r\n  video: File | null,\r\n  subtitles: File | null,\r\n  isConfigured: boolean\r\n}\r\n\r\nconst DEFAULT_STATE: State = {\r\n  isAuthorized: false, // true if user is authorized\r\n  roomname: null,\r\n  password: null,\r\n  navigation: 0,\r\n  isLogin: true,\r\n  video: null,\r\n  subtitles: null,\r\n  isConfigured: false\r\n}\r\n\r\n// create a context tracking user authorization\r\nconst StateContext = createContext<(State | Dispatch<SetStateAction<State>>)[]>([]);\r\n\r\nconst StateProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<State>(DEFAULT_STATE);\r\n  return(\r\n    <StateContext.Provider value={[state, setState]}>\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n}\r\n\r\nexport { StateContext, StateProvider };\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { StateContext } from './StateContext';\r\nimport { State } from './StateContext';\r\n\r\ninterface Props{\r\n  exact: boolean,\r\n  path: string\r\n}\r\n\r\nconst PrivateRoute: React.FC<Props> = ({ children, exact, path}) => {\r\n  // redirects to login if user is not authorized\r\n  const [state] = useContext(StateContext) as [State];\r\n\r\n  return(\r\n    <Route>\r\n      {state.isAuthorized ? children : <Redirect to=\"/join\"/>}\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useRef, useContext } from 'react'\r\nimport { socket } from '../App';\r\n//import Plyr from 'plyr'\r\nimport 'plyr/dist/plyr.css'\r\n \r\nimport styles from '../styles/pages/Viewer.module.scss';\r\nimport { StateContext, State } from '../components/StateContext';\r\n\r\n\r\nconst Viewer: React.FC = () => {\r\n\r\n  const [state] = useContext(StateContext) as [State];\r\n  var player = useRef<HTMLVideoElement>(null);\r\n  var track = useRef<HTMLTrackElement>(null);\r\n \r\n  useEffect(() => {\r\n\r\n    var toggle = true;\r\n    if(player.current){\r\n\r\n      player.current.addEventListener('play', () => {\r\n        if(toggle && player.current){\r\n          socket.emit('play', {id: socket.id, currentTime: player.current.currentTime});\r\n        }\r\n        toggle = true;\r\n      });\r\n\r\n      player.current.addEventListener('pause', () => {\r\n        if(toggle && player.current){\r\n          socket.emit('pause', {id: socket.id, currentTime: player.current.currentTime});\r\n        }\r\n        toggle = true;\r\n      });\r\n\r\n    }\r\n\r\n    socket.on('pause', (data: {id: string, currentTime: number}) => {\r\n      if(data.id !== socket.id && player.current){\r\n        toggle = false;\r\n        player.current.pause();\r\n        player.current.currentTime = data.currentTime;\r\n      }\r\n    });\r\n    socket.on('play', (data: {id: string, currentTime: number}) => {\r\n      if(data.id !== socket.id && player.current){\r\n        toggle = false;\r\n        player.current.currentTime = data.currentTime;\r\n        player.current.play();\r\n      }\r\n    });\r\n\r\n    if(state.video !== null && player.current){\r\n      let url = URL.createObjectURL(state.video);\r\n      player.current.src = url;\r\n    }\r\n\r\n    if(state.subtitles !== null && track.current){\r\n      let url = URL.createObjectURL(state.subtitles);\r\n      track.current.src = url;\r\n    }\r\n\r\n    return(() => {\r\n      if(player.current){\r\n        player.current.removeEventListener('play', () => {});\r\n        player.current.removeEventListener('pause', () => {});\r\n      }\r\n    });\r\n\r\n  }, [state.video, state.subtitles]);\r\n\r\n  return(\r\n    <div className={`${styles.body} ${state.isConfigured ? styles.show : styles.hidden}`}>\r\n      <video controls ref={player}>\r\n        <track label=\"English\" kind=\"subtitles\" ref={track}/>\r\n      </video>\r\n    </div> \r\n  );\r\n}\r\n\r\n// const config = {\r\n//   options: {\r\n//     controls: [\r\n//       // 'rewind',\r\n//       'play',\r\n//       // 'fast-forward',\r\n//       'progress',\r\n//       'current-time',\r\n//       // 'duration',\r\n//       'mute',\r\n//       'volume',\r\n//       'settings',\r\n//       'fullscreen',\r\n//       'pip'\r\n//     ],\r\n//     settings: ['captions', 'quality', 'speed'],\r\n//   }\r\n// }\r\n\r\nexport default Viewer;\r\n","import React, { useContext } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { FaFileVideo } from 'react-icons/fa';\r\nimport { MdSubtitles } from 'react-icons/md';\r\nimport styles from '../styles/components/Configurator.module.scss';\r\nimport { StateContext, State } from './StateContext';\r\n\r\n\r\nconst Configurator: React.FC = () => {\r\n\r\n  const [state, setState] = useContext(StateContext) as [State, React.Dispatch<React.SetStateAction<State>>];\r\n\r\n  const {getRootProps, getInputProps, open} = useDropzone({\r\n    // Disable click and keydown behavior\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    maxFiles: 2,\r\n    onDropAccepted: files => onDrop(files)\r\n  });\r\n\r\n  const onDrop = (files: any) => {\r\n    console.log(files);\r\n      for(const file of files){\r\n        let ext = file.name.slice(-3);\r\n        if(ext === \"mp4\"){\r\n          setState({...state, video: file});\r\n        }\r\n        else if(ext === \"vtt\"){\r\n          setState({...state, subtitles: file});\r\n        }\r\n      }\r\n  }\r\n\r\n  return(\r\n    <div className={styles.body}>\r\n      <div {...getRootProps()} className={styles.wrapper}>\r\n        <input {...getInputProps()}/>\r\n\r\n        <div/>\r\n\r\n        <div className={styles.banner}>\r\n          <FaFileVideo className={styles.icon}/>\r\n          <div className={styles.text}>\r\n            <span className={styles.label}>Drag &amp; Drop</span>\r\n            <span className={styles.highlight}>MP4 or WEBM</span>\r\n            <span className={styles.filename}>{state.video ? state.video.name : \"\"}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.banner}>\r\n          <MdSubtitles className={styles.icon}/>\r\n          <div className={styles.text}>\r\n            <span className={styles.label}>Drag &amp; Drop</span>\r\n            <span className={styles.highlight}>VTT</span>\r\n            <span className={styles.filename}>{state.subtitles ? state.subtitles.name : \"\"}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.chooseFile} onClick={open}>\r\n          Or Choose a File\r\n        </div>\r\n\r\n        <div \r\n          className={`\r\n            ${styles.chooseFile} \r\n            ${state.video ? styles.playEnabled : styles.playDisabled}\r\n          `}\r\n          onClick={() => {\r\n            if(state.video){\r\n              setState({...state, isConfigured: true})\r\n            }\r\n          }}\r\n        >\r\n          Continue\r\n        </div>\r\n        \r\n      </div>               \r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Configurator;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Line  } from 'rc-progress';\r\nimport { HiOutlineUserGroup, HiUserAdd } from 'react-icons/hi'\r\nimport styles from '../styles/pages/SplashPage.module.scss';\r\nimport { StateContext, State } from '../components/StateContext';\r\nimport Configurator from '../components/Configurator';\r\nimport { socket } from '../App';\r\n\r\nconst SplashPage: React.FC = () => {\r\n\r\n  const [state] = useContext(StateContext) as [State];\r\n\r\n  const renderStage = () => {\r\n    switch(state.navigation){\r\n      case 0:\r\n        return <Select/>\r\n      case 1:\r\n        return <Auth/>\r\n      case 2:\r\n        return <Configurator/>\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className={styles.body} style={state.isConfigured ? {display: \"none\"} : {}}>\r\n      <div className={styles.container}>\r\n        <div className={styles.title}>\r\n          QVC\r\n        </div>\r\n\r\n        <Line \r\n          style={styles.line} \r\n          percent={5 + (state.navigation * 45)}\r\n          strokeWidth=\"1\"\r\n          strokeColor=\"#1877F2\"\r\n        />\r\n\r\n        <div className={styles.subtitle}>\r\n          Welcome to Quarantine Video Client! Sync playback when watching videos remotely.\r\n        </div>\r\n\r\n        {renderStage()}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SplashPage; \r\n\r\n\r\nconst Select: React.FC = () => {\r\n\r\n  const [state, setState] = useContext(StateContext) as [State, React.Dispatch<React.SetStateAction<State>>];\r\n\r\n  return(\r\n    <div>\r\n      <div className={styles.option} onClick={() => setState({...state, navigation: 1, isLogin: true})}>\r\n        <HiUserAdd/> Join a Room\r\n      </div>\r\n      <div className={styles.option} onClick={() => setState({...state, navigation: 1, isLogin: false})}>\r\n        <HiOutlineUserGroup/> Create a Room\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Auth: React.FC = () => {\r\n\r\n  const [state, setState] = useContext(StateContext) as [State, React.Dispatch<React.SetStateAction<State>>];\r\n  \r\n  const [room, setRoom] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  const joinRoom = () => {\r\n    //join room, register with socket.id\r\n    socket.emit('joinRoom', {room, password, username, id: socket.id});\r\n  }\r\n\r\n  const createRoom = () => {\r\n    //join room, register with socket.id\r\n    socket.emit('createRoom', {room, password, username, id: socket.id});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.auth}>\r\n      <div className={styles.label}>Room Name</div>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Room Name\"\r\n        onChange={e => setRoom(e.target.value)}\r\n      />\r\n\r\n      <div className={styles.label}>Room Password</div>\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Room Password\"\r\n        onChange={e => setPassword(e.target.value)}\r\n      />\r\n\r\n      <button onClick={() => {\r\n        if(state.isLogin)\r\n          joinRoom();\r\n        else\r\n          createRoom();\r\n      }}>\r\n        {state.isLogin ? \"Join Room\" : \"Create Room\"}\r\n      </button>\r\n      <div \r\n        className={styles.alternative} \r\n        onClick={() => {\r\n          setState({...state, navigation: 0});\r\n        }\r\n      }>\r\n        Back\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useContext } from 'react';\nimport { HashRouter, Redirect, Switch, Route } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport PrivateRoute from './components/PrivateRoute';\nimport { StateContext, State } from './components/StateContext';\nimport './App.scss';\n\nimport Viewer from './pages/Viewer';\nimport SplashPage from './pages/SplashPage';\n// import Configurator from './components/Configurator';\n// import Authenticator from './components/Authenticator'\n\nconst App: React.FC = () => {\n\n  const [state, setState] = useContext(StateContext) as [State, React.Dispatch<React.SetStateAction<State>>];\n\n  socket.on('createRoom', (data: {result: boolean}) => {\n    setState({\n      ...state, \n      isAuthorized: data.result, \n      navigation: data.result ? 2 : state.navigation\n    });\n  });\n\n  socket.on('joinRoom', (data: {result: boolean}) => {\n    setState({\n      ...state, \n      isAuthorized: data.result, \n      navigation: data.result ? 2 : state.navigation\n    });  });\n\n  socket.on('disconnect', () => {\n    socket.removeAllListeners();\n  });\n\n  return(\n    <div>\n      <Viewer/>\n      {/* {!auth ? <Authenticator/> : null}\n      {!auth || video !== null ? null :\n        <Configurator \n          video = {video}\n          setVideo={setVideo}\n          subtitles = {subtitles} \n          setSubtitles={setSubtitles}\n        />\n      } */}\n\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/join\"><SplashPage/></Route>\n          <Route exact path=\"/create\"></Route>\n          <PrivateRoute exact path=\"/\"></PrivateRoute>\n          <Redirect to=\"/join\"/>\n        </Switch>\n      </HashRouter>\n\n    </div>\n  );\n}\n\nexport default App;\nexport const socket = io('https://waynezhu.ca', {secure: true, path: \"/qvc/socket.io\"});\n// export const socket = io('http://localhost:5000', {secure: true});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './components/StateContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <App/>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Viewer_body__1rpcF\",\"show\":\"Viewer_show__21fzy\",\"hidden\":\"Viewer_hidden__PyOua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Configurator_body__2c50Z\",\"wrapper\":\"Configurator_wrapper__UHkOV\",\"chooseFile\":\"Configurator_chooseFile__rpM-E\",\"playDisabled\":\"Configurator_playDisabled__2Zc4J\",\"playEnabled\":\"Configurator_playEnabled__1aiFU\",\"banner\":\"Configurator_banner__1Ux5V\",\"icon\":\"Configurator_icon__30A6Z\",\"text\":\"Configurator_text__2URqu\",\"label\":\"Configurator_label__1ztdz\",\"highlight\":\"Configurator_highlight__1JhuP\",\"filename\":\"Configurator_filename__21UIh\"};","\"use strict\";\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.unregister = exports.register = void 0;\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\nfunction register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n                });\r\n            }\r\n            else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.register = register;\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log('New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    })\r\n        .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' }\r\n    })\r\n        .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n        .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\nfunction unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n            registration.unregister();\r\n        })\r\n            .catch(error => {\r\n            console.error(error.message);\r\n        });\r\n    }\r\n}\r\nexports.unregister = unregister;\r\n"],"sourceRoot":""}